{"ts":1377015095894,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :token_authenticatable, :confirmable,\n  # :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":296}]],"length":296}
{"contributors":[],"silentsave":false,"ts":1377015127445,"patch":[[{"diffs":[[0,"datable\n"],[1,"\n\n  ROLES = %w[user admin superadmin]\n  def role?(base_role)\n    role.present? && ROLES.index(base_role.to_s) <= ROLES.index(role)\n  end\n  \n  \n"],[0,"end\n"]],"start1":284,"start2":284,"length1":12,"length2":155}]],"length":439,"saved":false}
{"ts":1377015922724,"patch":[[{"diffs":[[0,"idatable"],[1,", :omniauthable, :omniauth_providers => [:google_oauth2]"],[0,"\n\n\n  ROL"]],"start1":283,"start2":283,"length1":16,"length2":72}]],"length":495,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377016301944,"patch":[[{"diffs":[[0," end\n  \n"],[1,"  def self.find_for_google_oauth2(access_token, signed_in_resource=nil)\n    data = access_token.info\n    user = User.where(:email => data[\"email\"]).first\n\n    unless user\n        user = User.create(username: data[\"name\"],\n        \t\t   email: data[\"email\"],\n\t    \t\t   password: Devise.friendly_token[0,20],\n                   role: \"user\"\n\t    \t\t  )\n    end\n    user\nend\n"],[0,"  \nend\n"]],"start1":480,"start2":480,"length1":15,"length2":385}]],"length":865,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377102314901,"patch":[[{"diffs":[[0,"auth2]\n\n"],[1,"  #associations\n  User has_one :partner, class_name: \"User\", foreign_key: \"partner_id\"\n  \n  #define roles"],[0,"\n  ROLES"]],"start1":341,"start2":341,"length1":16,"length2":121},{"diffs":[[0," end\n  \n"],[1,"  \n  #define logging in with google\n"],[0,"  def se"]],"start1":585,"start2":585,"length1":16,"length2":52},{"diffs":[[0,"   user\n"],[1,"  "],[0,"end\n  \ne"]],"start1":987,"start2":987,"length1":16,"length2":18}]],"length":1008,"saved":false}
{"ts":1377102641014,"patch":[[{"diffs":[[0,"tions\n  "],[-1,"User "],[1,"#"],[0,"has_one "]],"start1":359,"start2":359,"length1":21,"length2":17}]],"length":1004,"saved":false}
{"ts":1377102710685,"patch":[[{"diffs":[[0,"tions\n  "],[-1,"#"],[0,"has_one "]],"start1":359,"start2":359,"length1":17,"length2":16}]],"length":1003,"saved":false}
{"ts":1377102840823,"patch":[[{"diffs":[[0,"tner_id\"\n  \n"],[1,"  \n"],[0,"  #define ro"]],"start1":422,"start2":422,"length1":24,"length2":27}]],"length":1006,"saved":false}
{"ts":1377103523373,"patch":[[{"diffs":[[0,"tner_id\"\n  \n"],[1,"  before_save :two_way_partner\n  \n  def two_way_partner\n      partner = User.find(self.partner_id)\n      partner.partner_id = self.id\n      partner.save\n  end\n      \n    \n"],[0,"  \n  #define"]],"start1":422,"start2":422,"length1":24,"length2":195}]],"length":1177,"saved":false}
{"ts":1377103531378,"patch":[[{"diffs":[[0," self.id"],[1," unless partner.partner_id"],[0,"\n      p"]],"start1":559,"start2":559,"length1":16,"length2":42}]],"length":1203,"saved":false}
{"ts":1377103635484,"patch":[[{"diffs":[[0,"ner_id)\n"],[1,"      unless partner.partner_id\n  "],[0,"      pa"]],"start1":525,"start2":525,"length1":16,"length2":50},{"diffs":[[0,"er_id\n      "],[1,"  "],[0,"partner.save"]],"start1":622,"start2":622,"length1":24,"length2":26},{"diffs":[[0,"er.save\n"],[1,"      end\n"],[0,"  end\n  "]],"start1":641,"start2":641,"length1":16,"length2":26}]],"length":1249,"saved":false}
