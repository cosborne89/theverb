{"ts":1377015094230,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Ability\n  include CanCan::Ability\n\n  def initialize(user)\n    # Define abilities for the passed in user here. For example:\n    #\n    #   user ||= User.new # guest user (not logged in)\n    #   if user.admin?\n    #     can :manage, :all\n    #   else\n    #     can :read, :all\n    #   end\n    #\n    # The first argument to `can` is the action you are giving the user \n    # permission to do.\n    # If you pass :manage it will apply to every action. Other common actions\n    # here are :read, :create, :update and :destroy.\n    #\n    # The second argument is the resource the user can perform the action on. \n    # If you pass :all it will apply to every resource. Otherwise pass a Ruby\n    # class of the resource.\n    #\n    # The third argument is an optional hash of conditions to further filter the\n    # objects.\n    # For example, here the user can only update published articles.\n    #\n    #   can :update, Article, :published => true\n    #\n    # See the wiki for details:\n    # https://github.com/ryanb/cancan/wiki/Defining-Abilities\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1054}]],"length":1054}
{"contributors":[],"silentsave":false,"ts":1377017574120,"patch":[[{"diffs":[[0,"e(user)\n"],[1,"      \n      \n    user ||= User.new # guest user (not logged in)\n       if user.role? :superadmin\n         can :manage, :all\n       end\n       if user.role? :admin\n         can :manage, :all \n         #cannot [:destroy, :edit, :update], User #do everything except delete users or change their permissions if you are using superadmin or tiered admins.\n       end\n       #if user.role? :creator\n         #can [:create, :destroy, :show], :all\n         #cannot [:index, :destroy, :show, :edit, :update], User\n         #can [:show, :edit, :update], User do |current_user|\n           #user.id == current_user.id #User can only edit the current user.\n         #end\n        #end\n       if user.role? :user\n         can :read, :all\n         cannot :index, User\n         can [:show, :edit, :update], User do |current_user|\n           user.id == current_user.id #User can only edit the current user.\n         end\n       else \n         can :read, :all\n       end\n"],[0,"    # De"]],"start1":56,"start2":56,"length1":16,"length2":967}]],"length":2005,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377027739919,"patch":[[{"diffs":[[0,"        "],[1,"#"],[0,"cannot :"]],"start1":788,"start2":788,"length1":16,"length2":17}]],"length":2006,"saved":false}
{"ts":1377027817795,"patch":[[{"diffs":[[0,"ged in)\n"],[-1,"    "],[0,"   if us"]],"start1":121,"start2":121,"length1":20,"length2":16},{"diffs":[[0,"superadmin\n     "],[-1,"    "],[0,"can :manage, :al"]],"start1":147,"start2":147,"length1":36,"length2":32},{"diffs":[[0,"e, :all\n"],[-1,"    "],[0,"   end\n"],[-1,"    "],[0,"   if us"]],"start1":173,"start2":173,"length1":31,"length2":23},{"diffs":[[0,":admin\n     "],[-1,"  "],[-1,"  "],[0,"can :manage,"]],"start1":205,"start2":205,"length1":28,"length2":24},{"diffs":[[0,", :all \n"],[-1,"    "],[0,"     #ca"]],"start1":228,"start2":228,"length1":20,"length2":16},{"diffs":[[0,"admins.\n"],[-1,"    "],[0,"   end\n"],[-1,"    "],[0,"   #if u"]],"start1":383,"start2":383,"length1":31,"length2":23},{"diffs":[[0,"reator\n     "],[-1,"   "],[-1," "],[0,"#can [:creat"]],"start1":418,"start2":418,"length1":28,"length2":24},{"diffs":[[0,"show], :all\n"],[-1,"    "],[0,"     #cannot"]],"start1":456,"start2":456,"length1":28,"length2":24},{"diffs":[[0,", User\n     "],[-1,"  "],[-1,"  "],[0,"#can [:show,"]],"start1":522,"start2":522,"length1":28,"length2":24},{"diffs":[[0,"rrent_user|\n"],[-1,"    "],[0,"       #user"]],"start1":575,"start2":575,"length1":28,"length2":24},{"diffs":[[0," user.\n     "],[-1,"    "],[0,"#end\n       "]],"start1":653,"start2":653,"length1":28,"length2":24},{"diffs":[[0,"end\n    "],[-1,"   "],[-1," "],[0,"#end\n"],[-1,"    "],[0,"   if us"]],"start1":666,"start2":666,"length1":29,"length2":21},{"diffs":[[0," :user\n     "],[-1,"  "],[-1,"  "],[0,"can :read, :"]],"start1":695,"start2":695,"length1":28,"length2":24},{"diffs":[[0,"d, :all\n"],[-1,"    "],[0,"     #ca"]],"start1":715,"start2":715,"length1":20,"length2":16},{"diffs":[[0,", User\n     "],[-1," "],[-1,"   "],[0,"can [:show, "]],"start1":742,"start2":742,"length1":28,"length2":24},{"diffs":[[0,"t_user|\n"],[-1,"    "],[0,"       u"]],"start1":798,"start2":798,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"    "],[0,"end\n   "],[-1,"  "],[-1,"  "],[0,"else \n"],[-1,"    "],[0,"    "]],"start1":879,"start2":879,"length1":33,"length2":21},{"diffs":[[0,"all\n    "],[1," cannot :index, User\n"],[0,"   end\n "]],"start1":913,"start2":913,"length1":16,"length2":37}]],"length":1939,"saved":false}
{"ts":1377027894540,"patch":[[{"diffs":[[0,"e, :all\n"],[1,"     can :index, User\n"],[0,"   end\n "]],"start1":173,"start2":173,"length1":16,"length2":38},{"diffs":[[0,", :all\n     "],[-1,"#"],[0,"cannot :inde"]],"start1":738,"start2":738,"length1":25,"length2":24}]],"length":1960,"saved":false}
